import { HttpAdapterHost, NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { TransformInterceptor } from '@/common/interceptors/transform.interceptor';
import { AllExceptionsFilter } from '@/common/filters/all-exceptions.filter';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.setGlobalPrefix('api');
  // Swagger config
  const config = new DocumentBuilder()
    .setTitle('T·ª´ T√¢m Thi·ªán Nguy·ªán API')
    .setDescription('API n·ªÅn t·∫£ng t·ª´ thi·ªán minh b·∫°ch')
    .setVersion('1.0')
    .addTag('charities')
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api/docs', app, document);

  // Validation pipe to√†n c·ª•c
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // B·ªè field kh√¥ng c√≥ trong DTO
      forbidNonWhitelisted: true, // B√°o l·ªói n·∫øu field d∆∞
      transform: true, // T·ª± chuy·ªÉn ƒë·ªïi ki·ªÉu d·ªØ li·ªáu
    }),
  );

  // Global Interceptor cho success response
  app.useGlobalInterceptors(new TransformInterceptor());

  //Global Filter cho t·∫•t c·∫£ exception
  const httpAdapterHost = app.get(HttpAdapterHost);

  app.useGlobalFilters(new AllExceptionsFilter(httpAdapterHost));
  const port = process.env.PORT ?? 3000;
  await app.listen(port);
  console.log(`üöÄ Server is running at: http://localhost:${port}`);
  console.log(
    `üìò Swagger docs available at: http://localhost:${port}/api/docs`,
  );
}
void bootstrap();
